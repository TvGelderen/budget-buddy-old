package transaction

import (
	"github.com/TvGelderen/budget-buddy/model"
	"strconv"
	"fmt"
)

script updateTransaction(transaction model.Transaction, startDateValue string, endDateValue string) {
    toggleModal('update-transaction-modal');

    const form = document.getElementById('update-transaction-modal').querySelector('form');
    const amount = form.querySelector('#put-amount');
    const type = form.querySelector('#put-incoming');
    const description = form.querySelector('#put-description');
    const recurring = form.querySelector('#put-recurring');
    const startDate = form.querySelector('#put-startdate');
    const endDate = form.querySelector('#put-enddate');

    localStorage.setItem('updateTransactionId', `${transaction.Id}`);

    amount.value = transaction.Amount;
    if (transaction.Incoming) {
        type.value = 1;
    } else {
        type.value = 0;
    }
    description.value = transaction.Description;
    recurring.value = transaction.Recurring;
    startDate.value = startDateValue;
    endDate.value = endDateValue;

    if (transaction.Recurring === "no") {
        startDate.labels[0].innerText = "Date";
        endDate.parentElement.style.display = "none";
    } else {
        startDate.labels[0].innerText = "Start date";
        endDate.parentElement.style.display = "flex";
    }
}

templ Table(transactions []model.Transaction, income float64, expense float64) {
	<div class="grid grid-cols-3 gap-4 mb-4">
		<div class="bg-secondary p-8 rounded-xl">
			<div class="text-xl md:text-2xl font-black text-white/75">Total income</div>
			<div class="mt-2 text-lg md:text-xl">€{ strconv.FormatFloat(income, 'f', -1, 64) }</div>
		</div>
		<div class="bg-secondary p-8 rounded-xl">
			<div class="text-xl md:text-2xl font-black text-white/75">Total expense</div>
			<div class="mt-2 text-lg md:text-xl">€{ strconv.FormatFloat(expense, 'f', -1, 64) }</div>
		</div>
		<div class="bg-secondary p-8 rounded-xl">
			<div class="text-xl md:text-2xl font-black text-white/75">Net income</div>
			<div class="mt-2 text-lg md:text-xl">€{ strconv.FormatFloat(income - expense, 'f', -1, 64) }</div>
		</div>
	</div>
	<div class="transactions-table">
		<div class="table-header table-item">Date</div>
		<div class="table-header table-item">Description</div>
		<div class="table-header table-item">Amount</div>
		<div class="table-header table-item">Type</div>
		<div class="table-header table-item"></div>
		for _, transaction := range transactions {
			<div class="table-item">{ transaction.Date.Format("January 02, 2006") }</div>
			<div class="table-item">{ transaction.Description }</div>
			<div class="table-item">€{ fmt.Sprintf("%.2f", transaction.Amount) }</div>
			<div class="table-item">
				if transaction.Incoming {
					Income
				} else {
					Expense
				}
			</div>
			<div class="table-item">
				<span
					class="material-symbols-outlined cursor-pointer"
					onclick={ updateTransaction(transaction, transaction.StartDate.Format("2006-01-02"), transaction.EndDate.Format("2006-01-02")) }
				>
					edit
				</span>
				<span
					class="material-symbols-outlined cursor-pointer"
					hx-delete={ fmt.Sprintf("api/transactions/%d", transaction.Id) }
                    hx-on::after-request="rowsUpdated()"
				>
					delete
				</span>
			</div>
		}
	</div>
	@Form("update-transaction-modal", "put")
}
